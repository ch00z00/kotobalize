name: Continuous Integration

# このワークフローはmainブランチへのpushとpull_request時に実行されます
on:
 push:
  branches: [main]
 pull_request:
  branches: [main]

jobs:
 lint-and-test:
  name: Lint and Test
  runs-on: ubuntu-latest
  steps:
   - name: Checkout repository
     uses: actions/checkout@v4

   # ----------------------------------
   # Frontend CI
   # ----------------------------------
   - name: Setup Node.js
     uses: actions/setup-node@v4
     with:
      # プロジェクトのpackage.jsonで指定されているバージョンに合わせてください
      node-version: "20"
      cache: "npm"
      cache-dependency-path: frontend/package-lock.json

   - name: Install frontend dependencies
     run: npm ci
     working-directory: ./frontend

   - name: Run frontend lint check
     run: npm run lint
     working-directory: ./frontend

   # `npm test` スクリプトがpackage.jsonに定義されていることを想定
   - name: Run frontend tests
     run: npm test
     working-directory: ./frontend

   # ----------------------------------
   # Backend CI
   # ----------------------------------
   - name: Setup Go
     uses: actions/setup-go@v5
     with:
      # プロジェクトのgo.modで指定されているバージョンに合わせてください
      go-version: "1.21"
      cache-dependency-path: backend/go.sum

   - name: Run backend format check
     # gofmtでフォーマットされていないファイルがあればエラーにします
     run: |
      if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
        echo "Go files are not formatted:"
        gofmt -s -l .
        exit 1
      fi
     working-directory: ./backend

   - name: Run backend vet check
     # go vetで静的解析エラーを検出します
     run: go vet ./...
     working-directory: ./backend

   - name: Run backend tests
     run: go test -v ./...
     working-directory: ./backend
